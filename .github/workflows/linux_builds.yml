name: 🐧 Linux Builds
on:
  workflow_call:

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_CPP_BRANCH: 4.4
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: verbose=yes production=yes warnings=extra werror=yes module_text_server_fb_enabled=yes strict_checks=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  TSAN_OPTIONS: suppressions=misc/error_suppressions/tsan.txt

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor)
            cache-name: linux-editor
            target: editor
            scons-flags: production=yes
            bin: "./bin/godot.linuxbsd.editor.x86_64"
            build-mono: false
            tests: false # Disabled due freeze caused by mix Mono build and CI
            doc-test: true
            proj-conv: true
            api-compat: true
            artifact: true
            godot-cpp: false

          - name: Template (target=template_release)
            cache-name: linux-template
            target: template_release
            scons-flags: production=yes
            bin: "./bin/godot.linuxbsd.template_release.x86_64"
            build-mono: false
            tests: false
            artifact: true

          - name: Template (target=template_debug)
            cache-name: linux-template-debug
            target: template_debug
            scons-flags: production=yes tests=yes
            bin: "./bin/godot.linuxbsd.template_debug.x86_64"
            build-mono: false
            tests: true
            artifact: true

    steps:
      - uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          path: patch
          sparse-checkout: |
            patch.py
          sparse-checkout-cone-mode: false

      - name: Apply Patches
        run: |
          python patch/patch.py

      - name: Linux dependencies for tests
        if: matrix.proj-test
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get install mesa-vulkan-drivers

      # TODO: Figure out somehow how to embed this one.
      - name: wayland-scanner dependency
        run: |
          sudo apt-get install libwayland-bin

      - name: Free disk space on runner
        run: |
          echo "Disk usage before:" && df -h
          sudo rm -rf /usr/local/lib/android
          echo "Disk usage after:" && df -h

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup Python and SCons
        if: ${{ ! matrix.legacy-scons }}
        uses: ./.github/actions/godot-deps

      - name: Setup Python and SCons (legacy versions)
        if: ${{ matrix.legacy-scons }}
        uses: ./.github/actions/godot-deps
        with:
          # Sync with Ensure*Version in SConstruct.
          python-version: 3.6
          scons-version: 4.0

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} ${{ matrix.scons-flags }}
          platform: linuxbsd
          target: ${{ matrix.target }}
          tests: ${{ matrix.tests }}

      - name: Compilation (godot-cpp)
        uses: ./.github/actions/godot-cpp-build
        if: matrix.godot-cpp
        with:
          bin: ${{ matrix.bin }}
          scons-flags: target=template_debug dev_build=yes verbose=yes
          godot-cpp-branch: ${{ env.GODOT_CPP_BRANCH }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Generate C# glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./modules/mono/glue

      - name: Build .NET solutions
        if: ${{ matrix.build-mono }}
        run: |
          ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=linuxbsd

      - name: Prepare artifact
        if: ${{ matrix.artifact }}
        run: |
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        if: ${{ matrix.artifact }}
        with:
          name: ${{ matrix.cache-name }}

      - name: Unit tests
        if: ${{ matrix.tests }}
        run: |
          ${{ matrix.bin }} --version
          ${{ matrix.bin }} --help
          ${{ matrix.bin }} --headless --test --force-colors

      - name: .NET source generators tests
        if: ${{ matrix.build-mono }}
        run: |
          dotnet test modules/mono/editor/Godot.NET.Sdk/Godot.SourceGenerators.Tests

      # Check class reference
      - name: Check for class reference updates
        if: ${{ matrix.doc-test }}
        run: |
          echo "Running --doctool to see if this changes the public API without updating the documentation."
          echo -e "If a diff is shown, it means that your code/doc changes are incomplete and you should update the class reference with --doctool.\n\n"
          ${{ matrix.bin }} --doctool --headless 2>&1 > /dev/null || true
          git diff --color --exit-code && ! git ls-files --others --exclude-standard | sed -e 's/^/New doc file missing in PR: /' | grep 'xml$'

      # Check API backwards compatibility
      - name: Check for GDExtension compatibility
        if: ${{ matrix.api-compat }}
        run: |
          ./misc/scripts/validate_extension_api.sh "${{ matrix.bin }}"

      # Download and run the test project
      - name: Test Godot project
        uses: ./.github/actions/godot-project-test
        if: ${{ matrix.proj-test }}
        with:
          bin: ${{ matrix.bin }}

      # Test the project converter
      - name: Test project converter
        uses: ./.github/actions/godot-converter-test
        if: ${{ matrix.proj-conv }}
        with:
          bin: ${{ matrix.bin }}
